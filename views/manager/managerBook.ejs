<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Book Store</title>
  <!-- Link to external CSS file -->
  <link rel="stylesheet" href="/style.css">
  <!-- Include Bootstrap CSS -->
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
</head>
<body>

  <%- include('nav.ejs') %>

<<<<<<< Updated upstream

    <div class="container">
        <h1>book List</h1>
        <form action="/book/add" method="POST" enctype="multipart/form-data" class="product-form-2">
            <input type="text" name="title" placeholder="Title" class="product-input">
            <input type="text" name="authorName" placeholder="authorName" class="product-input">
            <input type="text" name="genreName" placeholder="genreName" class="product-input">
            <input type="text" name="ISBN" placeholder="ISBN" class="product-input">
            <input type="date" name="publicationDate" placeholder="publicationDate" class="product-input">
            <input type="number" name="price" placeholder="price" class="product-input">
            <input type="number" name="stockQuantity" stockQuantity="ISBN" class="product-input">

            <input type="file" name="image" accept="image/*" class="product-input">
            <button type="submit" class="button">Add product</button>
          </form>
        <ul class="product-list">
          <% books.forEach(book => { %>
            <li class="product-item">
              <div class="product-details">
                <% if (book.image) { %>
                    <img src="/<%= book.image %>" alt="Image du book" class="product-image">
                <% } %>
                <div class="product-info">
                  <h3 class="product-title"><%= book.title %></h3>
                  <h3 class="product-title"><%= book.author.name %></h3>
                </div>
              </div>
                <div> 
          <form id="genreForm" action="/book/update/<%= book._id %>" method="POST" class="product-form">
            <input type="text" name="title" value="<%= book.title %>" placeholder="title" class="product-input">
            <input type="text" name="authorName" value="<%= book.author %>" placeholder="authorName" class="product-input">
            <input type="text" name="genreName" value="<%= book.genre %>" placeholder="genreName" class="product-input">
            <input type="text" name="ISBN" value="<%= book.ISBN %>" placeholder="ISBN" class="product-input">
            <input type="text" name="publicationDate" value="<%= book.publicationDate %>" placeholder="publicationDate" class="product-input">
            <input type="text" name="price" value="<%= book.price %>" placeholder="price" class="product-input">
            <input type="text" name="stockQuantity" value="<%= book.stockQuantity %>" placeholder="stockQuantity" class="product-input">
            
            <button type="submit" class="button">Modify</button>
            <button type="button" class="delete-button" onclick="deleteBook('<%= book._id %>')">Delete</button>
        </form>
                </div>
              
              
            </li>
          <% }); %>
        
        
        <script>
            function deleteBook(genreId) {
                if (confirm("Are you sure you want to delete this genre?")) {
                    fetch("/book/delete/" + genreId, {
                        method: "DELETE"
                    })
                    .then(response => {
                        // Handle response as needed
                        // For example, you could redirect after successful deletion
                        if (response.ok) {
                            window.location.reload;
                        } else {
                            // Handle error
                            console.error("Error deleting genre");
                        }
                    })
                    .catch(error => {
                        console.error("Error deleting genre:", error);
                    });
                }
            }
        </script>
        
        </ul>
      
       




</div>
=======
  <!-- Success alert (initially hidden) -->
  <div id="successAlert" class="alert alert-success alert-dismissible fade" role="alert" style="display: none;">
    The book has been successfully added!
    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
      <span aria-hidden="true">&times;</span>
    </button>
  </div>
 
>>>>>>> Stashed changes
 

  <!-- The modal -->
  <div class="modal fade" id="addBookModal" tabindex="-1" role="dialog" aria-labelledby="addBookModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="addBookModalLabel">Add Book</h5>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body">
          <!-- The form for adding a new book -->
          <form id="addBookForm">
            <!-- Form fields for adding a book -->
            <div class="form-group">
              <label for="title">Title</label>
              <input type="text" class="form-control" name="title" id="title" required>
            </div>
            <div class="form-group">
              <label for="authorName">Author</label>
              <input type="text" class="form-control" name="authorName" id="authorName" required>
            </div>
            <div class="form-group">
              <label for="genreName">Genre</label>
              <input type="text" class="form-control" name="genreName" id="genreName" required>
            </div>
            <div class="form-group">
              <label for="ISBN">ISBN</label>
              <input type="text" class="form-control" name="ISBN" id="ISBN" required>
            </div>
            <div class="form-group">
              <label for="publicationDate">Publication Date</label>
              <input type="date" class="form-control" name="publicationDate" required>
            </div>
            <div class="form-group">
              <label for="price">Price</label>
              <input type="number" class="form-control" name="price" step="0.01" required>
            </div>
            <div class="form-group">
              <label for="stockQuantity">Stock Quantity</label>
              <input type="number" class="form-control" name="stockQuantity" required>
            </div>
            <div class="form-group">
              <label for="image">Upload Book Cover</label>
              <input type="file" class="form-control-file" name="image">
            </div>
          </form>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
          <button id="submitFormButton" class="btn btn-primary">Add Book</button>
        </div>
      </div>
    </div>
  </div>

  <div class="container2">
    <h1>Book List</h1>
    <div class="d-flex justify-content-between align-items-center"> <!-- Flex container -->
      <!-- Barre de recherche -->
      <input type="text" id="searchInput" placeholder="Rechercher un livre par titre..." class="form-control mb-3" style="flex-grow: 1;"> <!-- Occupe tout l'espace disponible -->
    
      <!-- Button to trigger the modal -->
      <div class="addBooks">
        <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#addBookModal" style="margin-left: 10px;"> <!-- Espace entre les éléments -->
          Add Book
        </button>
      </div>
    </div>
    
 
    <ul class="product-list"> <!-- List of books -->
      <% books.forEach(book => { %>
        <li class="product-item mb-3"> <!-- Space between books -->
          <div class="d-flex"> <!-- Flex layout -->
            <% if (book.image) { %>
              <img src="/<%= book.image %>" alt="Book Image" class="product-image mr-3"> <!-- Image with margin -->
            <% } %>
            <div class="flex-grow-1"> <!-- Expand to take available space -->
              <h3 class="product-title"><%= book.title %></h3> <!-- Book title -->
              <p class="product-info">Author: <%= book.author.name %></p> <!-- Other book info -->
              <p class="product-info">ISBN: <%= book.ISBN %></p>
              <p class="product-info">price: <%= book.price %></p>
              <p class="product-info">genre: <%= book.genre.categories %></p>
              <p class="product-info">stockQuantity: <%= book.stockQuantity %></p>
              <p class="product-info">publicationDate: <%= book.publicationDate %></p>
           
              
                
          <!-- Bouton Modify pour ouvrir le modal d'édition -->
          <button 
          type="button" 
          class="btn btn-warning" 
          onclick="openEditBookModal({
            id: '<%= book._id %>',
            title: '<%= book.title %>',
            author: '<%= book.author.name %>',
            genre: '<%= book.genre.categories %>',
            ISBN: '<%= book.ISBN %>',
            price: '<%= book.price %>',
            stockQuantity: '<%= book.stockQuantity %>',
            publicationDate: '<%= book.publicationDate %>'
          })">Modify</button>
         
        
        
  
          <button 
          type="button" 
          class="btn btn-danger" 
          onclick="showDeleteConfirmation('<%= book._id %>')">Delete</button>
          </div>
          </div>
        </li>
      <% }); %>
    </ul> 
  
  </div>
  <!-- Success alert for book update -->
  <div id="updateSuccessAlert" class="alert alert-success alert-dismissible fade" role="alert" style="display: none;">
    Book updated successfully!
    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
      <span aria-hidden="true">&times;</span>
    </button>
  </div>

  <div class="modal fade" id="editBookModal" tabindex="-1" role="dialog" aria-labelledby="editBookModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="editBookModalLabel">Edit Book</h5>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body">
          <!-- Formulaire d'édition -->
          <form id="editBookForm">
            <input type="hidden" name="id"> <!-- ID du livre -->
            <div class="form-group">
              <label for="editTitle">Title</label>
              <input type="text" class="form-control" name="title" id="editTitle" required>
            </div>
            <div class="form-group">
              <label for="editAuthor">Author</label>
              <input type="text" class="form-control" name="author" id="editAuthor" required>
            </div>
            <div class="form-group">
              <label for="editGenre">Genre</label>
              <input type="text" class="form-control" name="genre" id="editGenre" required>
            </div>
            <div class="form-group">
              <label for="editISBN">ISBN</label>
              <input type="text" class="form-control" name="ISBN" required>
            </div>
            <div class="form-group">
              <label for="editPrice">Price</label>
              <input type="number" class="form-control" name="price" step="0.01" required>
            </div>
            <div class="form-group">
              <label for="editStock">Stock Quantity</label>
              <input type="number" class="form-control" name="stockQuantity" required>
            </div>
            <div class="form-group">
              <label for="editPublicationDate">Publication Date</label>
              <input type="date" class="form-control" name="publicationDate" required>
            </div>
           
          </form>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
          <button id="confirmUpdateButton" class="btn btn-primary">Confirm</button>
        </div>
      </div>
    </div>
  </div>
  <!-- Modal de confirmation de suppression -->
<div class="modal fade" id="deleteConfirmationModal" tabindex="-1" role="dialog" aria-labelledby="deleteConfirmationModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="deleteConfirmationModalLabel">Confirmer la suppression</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        Êtes-vous sûr de vouloir supprimer ce livre ? Cette action est irréversible.
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Annuler</button>
        <button type="button" class="btn btn-danger" id="confirmDeleteButton">Supprimer</button>
      </div>
    </div>
  </div>
</div>

  
  <!-- Include Bootstrap JS and jQuery -->
  <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

  <!-- JavaScript for AJAX form submission and handling delete function -->
  <script>
    $(document).ready(function() {
      // Submit the add book form with AJAX
      $('#submitFormButton').click(function(e) {
        e.preventDefault();

        var formData = new FormData(document.getElementById('addBookForm'));

        $.ajax({
          url: '/book/add', // Check this URL for correctness
          type: 'POST',
          data: formData,
          contentType: false,
          processData: false,
          success: function(response) {
            // Close the modal and show success alert
            $('#addBookModal').modal('hide');
            $('#successAlert').show().addClass('show');
            setTimeout(function() {
              $('#successAlert').removeClass('show').fadeOut();
            }, 5000);
          },
          error: function(err) {
            console.error('Error adding book:', err);
          }
        });
      });

     

      
      
    });
  </script>
   <script>
    function openEditBookModal(bookData) {
  const form = document.getElementById('editBookForm');
 
  // Remplir le formulaire avec les données du livre
  form.id.value = bookData.id;
  form.title.value = bookData.title;
  form.author.value = bookData.author;
  form.genre.value = bookData.genre;
  form.ISBN.value = bookData.ISBN;
  form.price.value = bookData.price;
  form.stockQuantity.value = bookData.stockQuantity;
  form.publicationDate.value = bookData.publicationDate;

  // Ouvrir le modal
  const modal = new bootstrap.Modal(document.getElementById('editBookModal'));
  modal.show();
}

    document.getElementById('confirmUpdateButton').addEventListener('click', () => {
  const form = document.getElementById('editBookForm');
  const formData = new FormData(form);

  const bookId = formData.get('id');
  const title = formData.get('title');
  const author = formData.get('author');
  const ISBN = formData.get('ISBN');
  const publicationDate = formData.get('publicationDate');
  const genre = formData.get('genre');
  const price = formData.get('price');
  const stockQuantity = formData.get('stockQuantity');

  fetch(`/book/update`, {
    method: 'POST', // ou 'PUT', selon vos conventions
    headers: {
      'Content-Type': 'application/json'
    },
    body: JSON.stringify({
      id: bookId,
      title,
      author,
      ISBN,
      publicationDate,
      genre,
      price,
      stockQuantity
    })
  })
  .then(response => response.json())
  .then(result => {
    console.log('Book updated:', result);

    // Fermer le modal après succès
    const modal = bootstrap.Modal.getInstance(document.getElementById('editBookModal'));
    modal.hide();

    // Afficher le message de succès
    const successAlert = document.getElementById('updateSuccessAlert');
    successAlert.show();
    setTimeout(() => {
      successAlert.classList.remove('show');
      successAlert.style.display = 'none';
    }, 5000);

    // Recharger la page pour refléter les mises à jour
    window.location.reload();
  })
  .catch(error => {
    console.error('Error updating book:', error);
    // Afficher un message d'erreur si besoin
    alert('Error updating book. Please try again later.');
  });
});




// Ouvrir le modal de confirmation de suppression avec l'ID du livre
function showDeleteConfirmation(bookId) {
  const confirmDeleteButton = document.getElementById('confirmDeleteButton');

  // Définir l'ID du livre à supprimer
  confirmDeleteButton.setAttribute('data-book-id', bookId);

  // Ouvrir le modal de confirmation
  $('#deleteConfirmationModal').modal('show');
}
// Supprimer le livre lorsque la suppression est confirmée
$(document).ready(function() {
  const confirmDeleteButton = document.getElementById('confirmDeleteButton');

  confirmDeleteButton.addEventListener('click', function() {
    const bookId = confirmDeleteButton.getAttribute('data-book-id');

    $.ajax({
      url: '/book/books/delete', // Endpoint de suppression
      type: 'DELETE',
      data: { id: bookId },
      success: function(response) {
        // Fermer le modal et afficher un message de succès
        $('#deleteConfirmationModal').modal('hide');
        
        // Vous pouvez également rafraîchir la page ou mettre à jour la liste des livres après suppression
        location.reload(); // Rafraîchir la page pour mettre à jour la liste des livres
      },
      error: function(err) {
        console.error('Erreur lors de la suppression du livre:', err);
        alert('La suppression a échoué.'); // Afficher un message d'erreur
      }
    });
  });
});
$(document).ready(function () {
  $('#searchInput').on('keyup', function () {
    var value = $(this).val().toLowerCase(); // Convertit la recherche en minuscules
    $('.product-item').filter(function () {
      $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1); // Affiche/masque en fonction du texte contenu
    });
  });
});

  </script>
</body>
</html>
